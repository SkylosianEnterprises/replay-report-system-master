{
  "name": "autotest",
  "homepage": "http://github.com/realistschuckle/autotest",
  "author": {
    "name": "Curtis Schlak",
    "url": "http://github.com/realistschuckle"
  },
  "bin": {
    "autotest": "./autotest.js"
  },
  "dependencies": {
    "colors": ">= 0.5.0"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/realistschuckle/autotest.git"
  },
  "description": "Simple script to provide some autotest capabilities for node or python.",
  "keywords": [
    "monitor",
    "development",
    "restart",
    "autotest",
    "reload"
  ],
  "version": "0.2.6",
  "preferGlobal": "true",
  "main": "./autotest",
  "readme": "# autotest\n\nFor use during development of a node.js or python based application. \n\n`autotest` will watch all the files in the directory in which you started `autotest`. If any change, it will automatically rerun your tests.\n\nThe entry point of your test suite can be specified in the `package.json` file: \n\n```javascript\n{\n\t...\n\t'scripts' : {\n\t\t'test' : 'test/index.js'\n    }\n    ...\n}\n```\n\n`autotest --npm` will behave as if you ran `npm test` in the directory where you have your `package.json`. \nThis enables you to use a test framework such as [expresso](http://visionmedia.github.com/expresso/), \nwhich provides automatic test discovery.\n\nUse the `--ignore` argument to have `autotest` ignore changes to specific files. \nFor example, you could issue `autotest --ignore \"*.log|*.out\"` to ignore any \nlog files that are created or updated during your tests and prevent `autotest`\nfrom restarting the suite when files matching these specs are updated.\n\nBe aware that to ignore all log files you'll have to enclose the pattern in quotes, otherwise the shell's \nsubstitution will take precedence. For example, if there is a `npm-debug.log` file in the folder:\n\n```\n# autotest --npm --ignore *.log \n--> actually runs\n# autotest --npm --ignore npm-debug.log \n--> if you want to ignore all log files, run\n# autotest --npm --ignore \"*.log\"\n```\n\n# Installation\n\nEither through forking or by using [npm](http://npmjs.org) (the recommended way):\n\n    npm install autotest -g\n    \nAnd `autotest` will be installed in to your bin path. `autotest` works best if it is installed in the global registry \nas it provides direct access to the `autotest` command line utility; if you choose to perform a local install then you need \nto start the monitor using: `./node_modules/.bin/autotest`.\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/realistschuckle/autotest/issues"
  },
  "_id": "autotest@0.2.6",
  "dist": {
    "shasum": "2c14943f428b16fb04cf967b8b5716b89da77eb4"
  },
  "_from": "autotest@*",
  "_resolved": "https://registry.npmjs.org/autotest/-/autotest-0.2.6.tgz"
}
